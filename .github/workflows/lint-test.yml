name: Lint and test
on:
  push:
    branches: ['**']
    tags-ignore: ['sandbox**']
jobs:
  tmp:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    env:
      AWS_REGION: ap-northeast-1
    steps:
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-region: ${{ env.AWS_REGION }}
          role-to-assume: arn:aws:iam::${{ secrets.AWS_ACCOUNT_ID }}:role/github-actions-role
  infra-lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Build image
        uses: ./.github/actions/build-image
        with:
          cache-key: infra
          context: ./infra
          tags: venus_infra:latest
          load: true
          push: false
          build-args: |
            AWS_CLI_URL=https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip
            AWS_CLI_SSM_URL=https://s3.amazonaws.com/session-manager-downloads/plugin/latest/ubuntu_64bit/session-manager-plugin.deb
            TERRAFORM_URL=https://releases.hashicorp.com/terraform/1.3.6/terraform_1.3.6_linux_amd64.zip
      - run: docker compose run --rm infra bash -c "cd terraform/common && terraform fmt -diff=true -check=true"
      - run: docker compose run --rm infra bash -c "cd terraform/sandbox && terraform fmt -diff=true -check=true"
  backend-lint-test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Up dependency container
        run: docker compose up db -d
      - name: Build image
        uses: ./.github/actions/build-image
        with:
          cache-key: backend
          context: ./backend
          tags: venus_backend:latest
          load: true
          push: false
      - name: Create test db
        run: docker compose run --rm --no-deps backend bash -c "rails db:create RAILS_ENV=test"
      - name: Run test
        run: docker compose run --rm --no-deps backend bash -c "rails test"
